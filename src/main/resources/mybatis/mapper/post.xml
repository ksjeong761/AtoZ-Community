<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atoz.post.PostMapper">

    <select id="loadPostSummaries"
            parameterType="com.atoz.post.dto.request.LoadPostSummariesRequestDto"
            resultType="com.atoz.post.dto.domain.PostSummary">
        SELECT
            p.post_id AS postId,
            p.user_id AS userId,
            u.age AS writerAge,
            p.title,
            p.hashtags,
            p.categories,
            p.like_count AS likeCount,
            p.view_count AS viewCount,
            p.created_at AS createdAt
        FROM posts p INNER JOIN users u
        WHERE p.user_id = u.user_id
            AND u.age BETWEEN #{writerAgeMin} AND #{writerAgeMax}
        ORDER BY created_at DESC, post_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <insert id="addPost"
            parameterType="com.atoz.post.dto.request.AddPostRequestDto"
            useGeneratedKeys="true"
            keyColumn="post_id"
            keyProperty="addPostRequestDto.postId">
        INSERT INTO posts (user_id, title, content)
        VALUES (#{userId}, #{addPostRequestDto.title}, #{addPostRequestDto.content})
    </insert>

    <select id="findPostByPostId" resultType="com.atoz.post.dto.domain.Post">
        SELECT
            post_id AS postId,
            user_id AS userId,
            title,
            content,
            hashtags,
            categories,
            like_count AS likeCount,
            view_count AS viewCount,
            created_at AS createdAt,
            updated_at AS updatedAt
        FROM posts
        WHERE post_id = #{postId}
    </select>

    <update id="updatePost" parameterType="com.atoz.post.dto.request.UpdatePostRequestDto">
        UPDATE posts
        SET
            title = #{updatePostRequestDto.title},
            content = #{updatePostRequestDto.content}
        WHERE post_id = #{postId}
        AND user_id = #{updatePostRequestDto.userId}
    </update>

    <update id="increaseViewCount">
        UPDATE posts
        SET view_count = view_count + 1
        WHERE post_id = #{postId}
    </update>

    <update id="increaseLikeCount">
        UPDATE posts
        SET like_count = like_count + 1
        WHERE post_id = #{postId}
    </update>

    <delete id="deletePost" parameterType="com.atoz.post.dto.request.DeletePostRequestDto">
        DELETE FROM posts
        WHERE post_id = #{postId}
        AND user_id = #{deletePostRequestDto.userId}
    </delete>
</mapper>